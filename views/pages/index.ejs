<!DOCTYPE html>
<html lang="en">
  <head>
      <%- include('../partials/head'); %>
  </head>
<body>

  <div class="container">

    <!-- main -->
    <div class="main">

      <!-- top bar -->
      <%- include('../partials/topbar.ejs'); %>

      <!-- cards -->
      <div class="cardBox">

        <% coins.forEach(function(coin) { %>
          <%- include('../partials/card.ejs', {coin}); %>
        <% }); %>

      </div>

      <!-- recent orders -->
      <div class="details">

        <%- include('../partials/table.ejs'), {label: "Recent Trades"} %>

      </div>


      <footer>
        <%- include('../partials/footer'); %>
      </footer>

    </div>

  </div>

  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

  <script>

    const recentTradesTable = document.body.querySelector('#recentTrades');

    const reloadTable = ( ) => {

      clearTable(recentTradesTable);

      axios.get('http://localhost:3000/coins/BTC-BRL/trades')
      .then(response => {

        response.data.forEach(order => {

          let row = `<td>${order.tid}</td>`
            + `<td>${formatToDateString(order.date) }</td>`
            + `<td>${formataMoeda(order.price)}</td>`
            + `<td>${order.amount}</td>`
            + `<td><span class="status ${order.type === 'buy' ? 'buyStatus': 'sellStatus'}">${order.type}</span></td>`;

          insertRowInTable(row);

        });

      }).catch(error => {
        console.log(error);
        insertRowInTable('<td>No records found.</td>');
      });
    }

    reloadTable();

    // Função utilizada para limpar as tabelas
    function clearTable (table) {
      const rowCount = table.rows.length;
      for (let i = rowCount - 1; i > 0; i--) {
          table.deleteRow(i);
      }
    }

    function insertRowInTable(dataRow){
      const row = recentTradesTable.insertRow(1);
      row.innerHTML = dataRow;
    }

    function formataMoeda(valor){
      return valor.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});
    }

    function formatToDateString(unix_timestamp) {

      const date = new Date(unix_timestamp * 1000);

      return (
        [
          padTo2Digits(date.getDate()),
          padTo2Digits(date.getMonth() + 1),
          date.getFullYear(),
        ].join('-') + ' ' +
        [
          padTo2Digits(date.getHours()),
          padTo2Digits(date.getMinutes()),
          padTo2Digits(date.getSeconds()),
        ].join(':')
      );
    }

    // Add
    function padTo2Digits(num) {
      return num.toString().padStart(2, '0');
    }
  </script>

</body>
</html>
