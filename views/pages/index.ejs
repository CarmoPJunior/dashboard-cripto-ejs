<!DOCTYPE html>
<html lang="en">
  <head>

    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- <meta http-equiv="refresh" content="10"> -->

    <title>Cripto - Dashboard</title>

    <link rel="stylesheet" href="css/dark-style.css">

  </head>
<body>

  <div class="container">

    <!-- main -->
    <div class="main">

      <!-- top bar -->
      <%- include('../partials/topbar.ejs'); %>

      <!-- cards -->
      <div class="cardBox">

        <% coins.forEach(function(coin) { %>
          <%- include('../partials/card.ejs', {coin}); %>
        <% }); %>

      </div>

      <!-- recent orders -->
      <div class="details">

        <%- include('../partials/table.ejs'), {label: "Recent Trades"} %>

        <%- include('../partials/chart.ejs') %>

      </div>

    </div>

  </div>

  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

  <script>

    const recentTradesTable = document.body.querySelector('#recentTrades');

    const reloadTable = ( ) => {

      clearTable(recentTradesTable);

      axios.get('http://localhost:3000/coins/BTC-BRL/trades')
      .then(response => {

        response.data.forEach(order => {

          let row = `<td>${order.tid}</td>`
            + `<td>${formatToDateString(order.date) }</td>`
            + `<td>${formataMoeda(order.price)}</td>`
            + `<td>${order.amount}</td>`
            + `<td><span class="status ${order.type === 'buy' ? 'buyStatus': 'sellStatus'}">${order.type}</span></td>`;

          insertRowInTable(row);

        });

      }).catch(error => {
        console.log(error);
        insertRowInTable('<td>No records found.</td>');
      });
    }
    reloadTable();
    // setInterval(reloadTable, 10000);

    // Função utilizada para limpar as tabelas
    function clearTable (table) {
      const rowCount = table.rows.length;
      for (let i = rowCount - 1; i > 0; i--) {
          table.deleteRow(i);
      }
    }

    function insertRowInTable(dataRow){
      const tbodyRef  = recentTradesTable.getElementsByTagName('tbody')[0];
      const row = tbodyRef.insertRow();
      row.innerHTML = dataRow;
    }

    function formataMoeda(value){
      value = parseFloat(value);
      return value.toLocaleString('pt-br',{style: 'currency', currency: 'BRL', maximumFractionDigits: 2});
    }

    function formatToDateString(unix_timestamp) {

      const date = new Date(unix_timestamp * 1000);

      return (
        [
          padTo2Digits(date.getDate()),
          padTo2Digits(date.getMonth() + 1),
          date.getFullYear(),
        ].join('-') + ' ' +
        [
          padTo2Digits(date.getHours()),
          padTo2Digits(date.getMinutes()),
          padTo2Digits(date.getSeconds()),
        ].join(':')
      );
    }

    // Add
    function padTo2Digits(num) {
      return num.toString().padStart(2, '0');
    }
  </script>


  <!-- Import ionicons -->
  <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
  <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>

  <!-- Importa scripts -->
  <script src="js/index.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>

  <script>

    const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];
    var yValues = [50,60,70,80,90,100,110,120,130,140,150];

    const data = {
      labels: labels,
      datasets: [
        {
          label: 'Dataset 1',
          data: [45, 20, 100 ,80, 72, 35],
          borderColor: "#5f4b8b",
          backgroundColor: "#b76ba3",
        },

      ]
    };

    const config = {
      type: 'line',
      data: data,
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'top',
          },
          title: {
            display: false,
            text: 'Line Chart'
          }
        },
        scales: {
          y: {
            min: 0,
          }
        }
      },
    };
    const myChart = new Chart("myChart", config);
  </script>

</body>
</html>
